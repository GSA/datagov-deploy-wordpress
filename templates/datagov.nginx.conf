# Upstream to abstract backend connection(s) for php
upstream php {
    server 127.0.0.1:9000;
}

server {
    listen 80 default_server;
    server_name _;
    if ( $request_uri ~* "%0A|%0D" ) { return 403; }
    return 301 https://$host$request_uri;
}

server {
    # SSL catch-all for any non-matching Hosts

    listen 443 default_server ssl;
    server_name _;
    ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
    ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
    ssl_protocols {{ wordpress_tls_protocols }};
    return 404;
}

server {
    ## Your website name goes here.
    server_name {{ wordpress_nginx_server_name }};
    ## Your only path reference.
    root {{ project_index_path }};
    ## This should be in your http block and if it is, it's not needed here.
    index index.php;

    client_max_body_size {{ client_max_body_size | default('1m') }};

    listen 443 ssl;
    ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
    ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
    ssl_protocols {{ wordpress_tls_protocols }};

    # Secure Nginx from Clickjacking with X-FRAME-OPTIONS
    add_header X-Frame-Options "SAMEORIGIN";

    ## new version of nginx 1.19+ does not have a good way to support
    ## more_clear_headers. Disable them for now
    # more_clear_headers "Server";
    # more_clear_headers "Cache-Control";
    # more_clear_headers "Cache-Control";
    # more_clear_headers "Pragma";
    # more_clear_headers "Expires";

    # Logging real client IPs instead of proxy/netscaler IP
    set_real_ip_from  10.0.0.0/8;
    real_ip_header    X-Forwarded-For;

    if ( $request_uri ~* "%0A|%0D" ) { return 403; }

    location /nginx_status {
        # Turn on stats
        stub_status on;
        access_log   on;
        allow 127.0.0.1;
        deny all;
    }

    # letsencrypt.org
    location ~ /.well-known {
        allow all;
    }

    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;


    ## Forbidding access to .git .env .etc
    location ~ /\. {
        return 404;
    }

    ## Protecting SAML config/keys
    location ^~ /app/uploads/saml-20-single-sign-on {
        return 404;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
    }

    # Redirect old CRM endpoints to general contact form
    # https://github.com/GSA/datagov-deploy/issues/880
    location ~ ^/(story|issue|data-request)/?$ {
        return 302 /contact;
    }


    location ^~ /app/plugins/saml-20-single-sign-on {
        # Comment temporarily if saml configuration through admin password is
        # needed, e.g. to regenerate service provider metadata.
        location ~* /loginuserpass.php {
            return 403;
        }

        location ~ ^/app/plugins/saml-20-single-sign-on/saml/www/module.php(?<pathinfo>/.*)?$ {
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root/app/plugins/saml-20-single-sign-on/saml/www/module.php;
            fastcgi_param PATH_INFO       $pathinfo;
            fastcgi_max_temp_file_size 0;
            fastcgi_hide_header X-Powered-By;
            fastcgi_pass php;
        }
        return 403;
    }

    location ~ \.php$ {
        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

        add_header "Cache-Control" "max-age=0, no-cache, no-store, must-revalidate";
        add_header "Pragma" "no-cache";
        add_header "Expires" "-1";

        add_header "X-XSS-Protection" "1; mode=block";
        add_header "X-Content-Type-Options" "nosniff";

        add_header "Access-Control-Allow-Origin" "*";
        add_header "Access-Control-Allow-Methods" "POST, PUT, GET, DELETE, OPTIONS";

        add_header "Referrer-Policy" "origin";

        # Avoid duplicate HSTS. Netscaler adds it for external traffic
        set $internal_traffic 0;
        if ( $host = $hostname ) {
          set $internal_traffic 1;
        }
        if ( $host = {{ ansible_default_ipv4.address }} ) {
          set $internal_traffic 1;
        }
        if ( $internal_traffic = 1 ) {
          add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; ";
        }

        # add_header "Content-Security-Policy" "default-src 'self' 'unsafe-inline' *.google-analytics.com *.googleapis.com cdn.datatables.net *.gov s.w.org; img-src *; font-src *";

        add_header X-Frame-Options "SAMEORIGIN";

        try_files $uri =404;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_hide_header X-Powered-By;
        fastcgi_intercept_errors on;
        fastcgi_max_temp_file_size 0;
        fastcgi_pass php;
        location ~ /app/plugins/metric-count/.*\.php$ {
            fastcgi_pass php;
            fastcgi_read_timeout 1800;
        }
        location ~ /app/plugins/datagov-custom/.*\.php$ {
            fastcgi_pass php;
            fastcgi_read_timeout 1800;
        }
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires max;
        log_not_found off;
        add_header "X-XSS-Protection" "1; mode=block";
        add_header "X-Content-Type-Options" "nosniff";
    }
}

# Redirect Rules for Data.gov
# ----------------------------

server {
  server_name aapi.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/aapi${uri}";
}

server {
  server_name admin-catalog.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 302 "https://catalog.data.gov/${uri}";
}

server {
  server_name admin-catalog-bsp.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 302 "https://catalog.data.gov/${uri}";
}

server {
  server_name ag.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/food${uri}";
}

server {
  server_name agriculture.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/food${uri}";
}

server {
  server_name alpha.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/highlights${uri}";
}

server {
  server_name business.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/business${uri}";
}

server {
  server_name businessusa.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 302 "https://www.data.gov/businessusa${uri}";
}

server {
  server_name catalog.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 302 "https://catalog.data.gov/dataset${uri}";
}

server {
  server_name catalog-bsp.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 302 "https://catalog-bsp.data.gov/dataset${uri}";
}

server {
  server_name cities.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/cities${uri}";
}

server {
  server_name climate.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/climate${uri}";
}

server {
  server_name consumer.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/consumer${uri}";
}

server {
  server_name consumers.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/consumer${uri}";
}

server {
  server_name counties.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/counties${uri}";
}

server {
  server_name dashboard-bsp.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 302 "https://dashboard-bsp.data.gov/offices${uri}";
}

server {
  server_name dashboard-labs.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 302 "https://dashboard-labs.data.gov/offices${uri}";
}

server {
  server_name developer.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/developers${uri}";
}

server {
  server_name disaster.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/disasters${uri}";
}

server {
  server_name disasters.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/disasters${uri}";
}

server {
  server_name ecosystems.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/ecosystems${uri}";
}

server {
  server_name ed.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/education${uri}";
}

server {
  server_name education.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/education${uri}";
}

server {
  server_name ethics.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/ethics${uri}";
}

server {
  server_name explore.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 302 "https://catalog.data.gov/dataset${uri}";
}

server {
  server_name finance.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/finance${uri}";
}

server {
  server_name food.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/food${uri}";
}

server {
  server_name foodsecurity.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/food${uri}";
}

server {
  server_name geospatial.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/geospatial${uri}";
}

server {
  server_name globaldevelopment.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/development${uri}";
}

server {
  server_name health.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.healthdata.gov/${uri}";
}

server {
  server_name highlights.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/highlights${uri}";
}

server {
  server_name humanrights.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/${uri}";
}

server {
  server_name inventory.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 302 "https://inventory.data.gov/user/login${uri}";
}

server {
  server_name inventory-bsp.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 302 "https://inventory-bsp.data.gov/user/login${uri}";
}

server {
  server_name jobs.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/jobs-and-skills${uri}";
}

server {
  server_name labs.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 302 "https://www.data.gov/labs${uri}";
}

server {
  server_name law.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/law${uri}";
}

server {
  server_name make.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/manufacturing${uri}";
}

server {
  server_name manufacturing.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/manufacturing${uri}";
}

server {
  server_name next.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/${uri}";
}

server {
  server_name notice.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.usa.gov/${uri}";
}

server {
  server_name nutrition.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/food${uri}";
}

server {
  server_name ocean.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/ocean${uri}";
}

server {
  server_name reference.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/${uri}";
}

server {
  server_name research.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/research${uri}";
}

server {
  server_name rural.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/food${uri}";
}

server {
  server_name safety.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/safety${uri}";
}

server {
  server_name science.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/research${uri}";
}

server {
  server_name semantic.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/developers${uri}";
}

server {
  server_name services.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/${uri}";
}

server {
  server_name skills.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/jobs-and-skills${uri}";
}

server {
  server_name smartdisclosure.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/consumer${uri}";
}

server {
  server_name states.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/states${uri}";
}

server {
  server_name vocab.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/${uri}";
}

server {
  server_name weather.data.gov;
  listen 443 ssl;
  ssl_certificate {{ wordpress_tls_host_certificate_filepath }};
  ssl_certificate_key {{ wordpress_tls_host_key_filepath }};
  ssl_protocols {{ wordpress_tls_protocols }};

  if ( $request_uri ~* "%0A|%0D" ) { return 403; }
  return 301 "https://www.data.gov/weather${uri}";
}
