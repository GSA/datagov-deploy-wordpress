--- # Data.gov repo deployment & composer install

- name: Check whether new code dir exists
  stat: path="{{ project_source_new_code_path }}"
  register: p

- name: Create rollback code
  command: mv "{{ project_source_new_code_path }}" "{{ project_source_rollback_path }}"
  when: p.stat.isdir is defined and p.stat.isdir

- name: Symlink current dir with rollback code
  file:
    src: "{{ project_source_rollback_path }}"
    path: "{{ current_source_symlink }}"
    state: link
  when: p.stat.isdir is defined and p.stat.isdir

- name: Clone project files to {{ project_source_new_code_path }}
  git:
    repo: "{{ project_git_repo }}"
    dest: "{{ project_source_new_code_path }}"
    version: "{{ project_git_version }}"
    force: true

- name: Composer install Data.gov Wordpress and plugins to {{ project_source_new_code_path }}
  composer:
    arguments: "--no-ansi --no-interaction --profile -v"
    no-scripts: yes
    no-dev: "{{ 'yes' if web_app_env != 'development' else 'no' }}"
    working_dir: "{{ project_source_new_code_path }}"
  environment:
      COMPOSER_DISCARD_CHANGES: "true"
  register: composer_output

- name: Composer output
  debug:
    msg: "{{ composer_output.stdout_lines }}"

- name: Adding Bedrock .env to {{ project_source_new_code_path }}/.env
  template:
    src: ".env"
    dest: "{{ project_source_new_code_path }}/.env"

- name: Copy W3 Total Cache files
  template:
    src: "w3tc-wp-loader.php"
    dest: "{{ project_source_new_code_path }}/web/app/plugins/w3tc-wp-loader.php"

- name: Making sure saml config directory exists
  file:
    dest: "{{ project_source_new_code_path }}/web/app/uploads/saml-20-single-sign-on/etc/config"
    state: directory
    recurse: yes

- name: Copy saml20-idp-remote ini
  template:
    src: "saml20-idp-remote.ini"
    dest: "{{ project_source_new_code_path }}/web/app/uploads/saml-20-single-sign-on/etc/config/saml20-idp-remote.ini"

- name: Making sure saml config directory exists
  file:
    dest: "{{ project_source_new_code_path }}/web/app/uploads/saml-20-single-sign-on/etc/certs/1"
    state: directory
    recurse: yes

- name: Copy SAML crt
  template:
    src: "mycert.pem"
    dest: "{{ project_source_new_code_path }}/web/app/uploads/saml-20-single-sign-on/etc/certs/1/1.cer"
    mode: 0644

- name: Copy SAML key
  template:
    src: "mykey.pem"
    dest: "{{ project_source_new_code_path }}/web/app/uploads/saml-20-single-sign-on/etc/certs/1/1.key"
    mode: 0644

- name: Copy saml_authentication_options json
  template:
    src: "saml.json"
    dest: "{{ project_source_new_code_path }}/saml.json"

- name: Copy saml-20-single-sign-on config
  template:
    src: "saml-config.php"
    dest: "{{ project_source_new_code_path }}/web/app/plugins/saml-20-single-sign-on/saml/config/config.php"

- name: Copy s3 tantan_wordpress_s3 config json
  template:
    src: "s3.json"
    dest: "{{ project_source_new_code_path }}/s3.json"

- name: Symlink current dir with new code
  file:
    src: "{{ project_source_new_code_path }}"
    path: "{{ current_source_symlink }}"
    state: link

- name: Disabling saml on local
  command: wp plugin deactivate saml-20-single-sign-on
  args:
    chdir: "{{ project_source_new_code_path }}"
  when: "'development' == web_app_env"
  run_once: true
  tags: wp-cli

- name: update s3 options
  shell: wp option update tantan_wordpress_s3 --format=json < s3.json
  args:
    chdir: "{{ project_source_new_code_path }}"
  run_once: true
  tags:
    - skip_ansible_lint
    - wp-cli

- name: Update saml saml_authentication_options
  shell: wp option update saml_authentication_options --format=json < saml.json
  args:
    chdir: "{{ project_source_new_code_path }}"
  run_once: true
  tags:
    - skip_ansible_lint
    - wp-cli

- name: Updating admin pass if env=Dev
  command: wp user update admin --user_pass=password
  args:
    chdir: "{{ project_source_new_code_path }}"
  when: "'development' == web_app_env"
  run_once: true
  tags:
    - wp-cli

- name: Enabling dev plugins if env=Dev
  command: wp plugin activate check-email debug-bar log-deprecated-notices query-monitor
  args:
    chdir: "{{ project_source_new_code_path }}"
  when: "'development' == web_app_env"
  run_once: true
  tags:
    - wp-cli

- name: Remove vulnerable swfupload.swf
  file:
    dest: "{{ project_source_new_code_path }}/web/wp/wp-includes/js/swfupload/swfupload.swf"
    state: absent

- name: Remove a line in amazon-s3-and-cloudfront plugin to fix url issues
  lineinfile:
    path: "{{ project_source_new_code_path }}/web/app/plugins/amazon-s3-and-cloudfront/classes/as3cf-filter.php"
    regexp: '\$value.*\$this->replace_urls\( \$value, \$url_pairs \);'
    state: absent

#- name: Set up main wp cronjob
#  cron:
#    name: "Set up main wp cronjob"
#    minute: "*/10"
#    job: "/usr/bin/php {{ current_source_symlink }}/web/wp/wp-cron.php >> /var/log/wp-cron.log 2>&1" #todo: Use SES to send this to a recipient list
#  run_once: true
